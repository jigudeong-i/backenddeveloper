<!DOCTYPE html>
<html lang="ko">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>json(2) - 05_json.html</title>
		<link href="../image/icon.png" rel="icon" type="image/x-icon" />

		<link rel="stylesheet" href="../css/reset.css"/>
		<link rel="stylesheet" href="../css/common.css"/>
	</head>
	<body>
		<h1 class="title">$.ajax() 함수를 사용한 JSON데이터 읽기 (2)</h1>
		<div class="exec">
			<input type="button" value="JSON데이터 가져오기" id="mybtn" />
		</div>
		<div class="console" id="result"></div>
		
		<script src="../js/jquery-3.7.1.min.js"></script>
		<script>
			$("#mybtn").on("click", function() {
				$.ajax({
					url: '/firstExample/ajax/json/05.json', 
					method: 'get',
					dataType: 'json'
				}).done(function (json) {
					$("#result").html("");
					/* 파라미터로 전달되는 객체는 JSON 자체이다. 배열까지 접근한다. 고로 subject는 배열 */
					let subject = json.school.subject;
					
					// 배열의 길이만큼 반복문 처리한다.
					for (let i=0; i<subject.length; i++) {
						// 반복처리 안에서 i번째 요소는 JSON데이터 자체이다.
						let title = subject[i].title; //인덱스 번호가 0이라면 -> json.school.subject[0].title
						let time = subject[i].time;
						let teacher = subject[i].teacher;
					
						// 결과를 출력하기 위한 동적 요소의 생성 
						let ul = $("<ul>");
						let li1 = $("<li>").html(title);
						let li2 = $("<li>").html(time);
						let li3 = $("<li>").html(teacher);
						
						ul.append(li1).append(li2).append(li3);
						
						$("#result").append(ul);
						$("#result").append("<hr />");
					} // for문의 끝 
					
					
					/* json 데이터 접근은 this 객체로 가능. 
					   자바스크립트는 json을 데이터 자체로 해석하고 또는 클래스 정의 시 객체 리터럴로 해석한다 
					   그래서 요소를 필드를 보기에 this.key로 접근이 가능하다 
					let subject = json.school.subject;
					$(subject).each(function() {
						let title = this.title;
						let time = this.time;
						let teacher = this.teacher;
						
						// 결과를 출력하기 위한 동적 요소의 생성 
						let ul = $("<ul>");
						let li1 = $("<li>").html(title);
						let li2 = $("<li>").html(time);
						let li3 = $("<li>").html(teacher);
						ul.append(li1).append(li2).append(li3);
						
						$("#result").append(ul);
						$("#result").append("<hr />");
					}); // each 함수의 종료 */

				}).fail(function(xhr, textStatus) {
					 //통신이 실패했을 때 실행되는 함수.
					$("#result").html(textStatus + " (HTTP-" + xhr.status + ")");
				});
			});	
		</script>
	</body>
</html>